# Generated by Django 5.2.3 on 2025-06-22 21:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('djangoapp', '0002_alter_day_sentiment_message'),
    ]

    operations = [
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='Name or description of this place', max_length=200)),
                ('center_latitude', models.DecimalField(decimal_places=8, help_text='Center latitude of clustered locations', max_digits=10)),
                ('center_longitude', models.DecimalField(decimal_places=8, help_text='Center longitude of clustered locations', max_digits=11)),
                ('visit_count', models.PositiveIntegerField(default=0, help_text='Number of location points in this cluster')),
                ('total_time_minutes', models.PositiveIntegerField(default=0, help_text='Total time spent at this place in minutes')),
                ('first_visit', models.DateTimeField(help_text='First recorded visit to this place')),
                ('last_visit', models.DateTimeField(help_text='Last recorded visit to this place')),
                ('address', models.TextField(blank=True, help_text='Address of this place')),
                ('activity_types', models.JSONField(default=dict, help_text='Activity types and their counts at this place')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('time_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='djangoapp.timeanalysis')),
            ],
            options={
                'verbose_name': 'Place',
                'verbose_name_plural': 'Places',
                'ordering': ['-visit_count'],
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(help_text='Timestamp of the location record')),
                ('latitude', models.DecimalField(decimal_places=8, help_text='Latitude coordinate', max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, help_text='Longitude coordinate', max_digits=11)),
                ('accuracy', models.DecimalField(blank=True, decimal_places=2, help_text='Location accuracy', max_digits=10, null=True)),
                ('altitude', models.DecimalField(blank=True, decimal_places=2, help_text='Altitude', max_digits=10, null=True)),
                ('speed', models.DecimalField(blank=True, decimal_places=2, help_text='Speed', max_digits=10, null=True)),
                ('heading', models.DecimalField(blank=True, decimal_places=2, help_text='Heading/direction', max_digits=10, null=True)),
                ('activity_type', models.CharField(blank=True, help_text='Activity type (walking, driving, stationary, etc.)', max_length=50)),
                ('location_name', models.CharField(blank=True, help_text='Named location', max_length=200)),
                ('address', models.TextField(blank=True, help_text='Address of the location')),
                ('source', models.CharField(default='ios', help_text='Source of location data', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('time_analysis', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='djangoapp.timeanalysis')),
                ('place', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='location_points', to='djangoapp.place')),
            ],
            options={
                'verbose_name': 'Location',
                'verbose_name_plural': 'Locations',
                'ordering': ['timestamp'],
            },
        ),
    ]
